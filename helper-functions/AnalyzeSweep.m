function summary = AnalyzeSweep(sweep, params)

[y_lowpass, baseline] = ApplyMovingAverageFilter(sweep, params.MOVING_AVERAGE_WINDOW_SEC);



% find indices where signal goes from above to below threshold. use the
% filtered signal for now. 


indices_above_threshold = find(y_lowpass > baseline - abs(params.THRESHOLD_CURRENT_STEP));
[~, tmp_idx] = max(diff(indices_above_threshold));
peak_start_index = indices_above_threshold(tmp_idx) - round(params.BUFFER_SEC/sweep.dt);
peak_end_index = indices_above_threshold(tmp_idx + 1) + round(params.BUFFER_SEC/sweep.dt);
peak_start_time = peak_start_index*sweep.dt;
peak_end_time = peak_end_index*sweep.dt; 

peak_time_vector = sweep.t(peak_start_index:peak_end_index);
peak_signal = sweep.y(peak_start_index:peak_end_index);
peak_lowpass = y_lowpass(peak_start_index:peak_end_index);

[most_negative_current, most_negative_current_peak_index] = min(peak_lowpass);
most_negative_current = most_negative_current - baseline;
most_negative_current_time = peak_start_time + most_negative_current_peak_index*sweep.dt; 

s = tf('s');
derivative = lsim(s/(0.01*s+1), y_lowpass-baseline, sweep.t);
[peaks, locs] = findpeaks(derivative, ...
    'MinPeakHeight', 0.2*(max(derivative)-min(derivative)), ...
    'MinPeakWidth', 100);
transient_end_idx = locs(1);
transient_end_time = transient_end_idx*sweep.dt - params.TRANSIENT_END_BUFFER_SEC; 

steady_state_photocurrent = -baseline + peak_lowpass(transient_end_idx - peak_start_index - round(params.TRANSIENT_END_BUFFER_SEC/sweep.dt));
steady_state_photocurrent_time = transient_end_time; 

summary = struct(...
    'fn', sweep.fn, ...
    'date', sweep.date, ...
    'cell_name', sweep.cell_name, ...
    'trial_name', sweep.trial_name, ...
    'sweep_name', sweep.sweep_name, ...
    'dt', sweep.dt, ...
    't', sweep.t, ...
    'y', sweep.y, ...
    'y_lowpass', y_lowpass, ...
    'peak_t', peak_time_vector, ...
    'peak_y', peak_signal, ...
    'peak_lowpass', peak_lowpass, ...
    'baseline', baseline, ...
    'peak_photocurrent', most_negative_current, ...
    'peak_photocurrent_time', most_negative_current_time, ...
    'steady_state_photocurrent', steady_state_photocurrent, ...
    'steady_state_photocurrent_time', steady_state_photocurrent_time, ...
    'peak_start_time', peak_start_time, ...
    'peak_end_time', peak_end_time, ...
    'transient_end_time', transient_end_time ...
);

